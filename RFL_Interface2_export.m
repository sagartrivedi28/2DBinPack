function varargout = RFL_Interface2_export(varargin)
% RFL_INTERFACE2_EXPORT MATLAB code for RFL_Interface2_export.fig
%      RFL_INTERFACE2_EXPORT, by itself, creates a new RFL_INTERFACE2_EXPORT or raises the existing
%      singleton*.
%
%      H = RFL_INTERFACE2_EXPORT returns the handle to a new RFL_INTERFACE2_EXPORT or the handle to
%      the existing singleton*.
%
%      RFL_INTERFACE2_EXPORT('CALLBACK',hObject,eventData,handles,...) calls the local
%      function named CALLBACK in RFL_INTERFACE2_EXPORT.M with the given input arguments.
%
%      RFL_INTERFACE2_EXPORT('Property','Value',...) creates a new RFL_INTERFACE2_EXPORT or raises the
%      existing singleton*.  Starting from the left, property value pairs are
%      applied to the GUI before RFL_Interface2_export_OpeningFcn gets called.  An
%      unrecognized property name or invalid value makes property application
%      stop.  All inputs are passed to RFL_Interface2_export_OpeningFcn via varargin.
%
%      *See GUI Options on GUIDE's Tools menu.  Choose "GUI allows only one
%      instance to run (singleton)".
%
% See also: GUIDE, GUIDATA, GUIHANDLES

% Edit the above text to modify the response to help RFL_Interface2_export

% Last Modified by GUIDE v2.5 11-Jul-2016 18:48:48

% Begin initialization code - DO NOT EDIT
gui_Singleton = 1;
gui_State = struct('gui_Name',       mfilename, ...
                   'gui_Singleton',  gui_Singleton, ...
                   'gui_OpeningFcn', @RFL_Interface2_export_OpeningFcn, ...
                   'gui_OutputFcn',  @RFL_Interface2_export_OutputFcn, ...
                   'gui_LayoutFcn',  @RFL_Interface2_export_LayoutFcn, ...
                   'gui_Callback',   []);
if nargin && ischar(varargin{1})
    gui_State.gui_Callback = str2func(varargin{1});
end

if nargout
    [varargout{1:nargout}] = gui_mainfcn(gui_State, varargin{:});
else
    gui_mainfcn(gui_State, varargin{:});
end
% End initialization code - DO NOT EDIT


% --- Executes just before RFL_Interface2_export is made visible.
function RFL_Interface2_export_OpeningFcn(hObject, eventdata, handles, varargin)
% This function has no output args, see OutputFcn.
% hObject    handle to figure
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
% varargin   command line arguments to RFL_Interface2_export (see VARARGIN)

% Choose default command line output for RFL_Interface2_export
handles.output = hObject;

% Update handles structure
guidata(hObject, handles);

% UIWAIT makes RFL_Interface2_export wait for user response (see UIRESUME)
% uiwait(handles.figure1);


% --- Outputs from this function are returned to the command line.
function varargout = RFL_Interface2_export_OutputFcn(hObject, eventdata, handles) 
% varargout  cell array for returning output args (see VARARGOUT);
% hObject    handle to figure
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Get default command line output from handles structure
varargout{1} = handles.output;



function edit_fname_Callback(hObject, eventdata, handles)
% hObject    handle to edit_fname (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hints: get(hObject,'String') returns contents of edit_fname as text
%        str2double(get(hObject,'String')) returns contents of edit_fname as a double


% --- Executes during object creation, after setting all properties.
function edit_fname_CreateFcn(hObject, eventdata, handles)
% hObject    handle to edit_fname (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    empty - handles not created until after all CreateFcns called

% Hint: edit controls usually have a white background on Windows.
%       See ISPC and COMPUTER.
if ispc && isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
    set(hObject,'BackgroundColor','white');
end


% --- Executes on button press in pushbutton_Fload.
function pushbutton_Fload_Callback(hObject, eventdata, handles)
% hObject    handle to pushbutton_Fload (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
[handles.fname,handles.pname] = uigetfile('*.xls;*.xlsx','Select The Product List File');
handles.xlspath = fullfile(handles.pname,handles.fname);
set(handles.edit_fname,'String',handles.xlspath);
guidata(hObject,handles);


function edit_Maxno_Callback(hObject, eventdata, handles)
% hObject    handle to edit_Maxno (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hints: get(hObject,'String') returns contents of edit_Maxno as text
%        str2double(get(hObject,'String')) returns contents of edit_Maxno as a double


% --- Executes during object creation, after setting all properties.
function edit_Maxno_CreateFcn(hObject, eventdata, handles)
% hObject    handle to edit_Maxno (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    empty - handles not created until after all CreateFcns called

% Hint: edit controls usually have a white background on Windows.
%       See ISPC and COMPUTER.
if ispc && isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
    set(hObject,'BackgroundColor','white');
end



function edit_grid_Callback(hObject, eventdata, handles)
% hObject    handle to edit_grid (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hints: get(hObject,'String') returns contents of edit_grid as text
%        str2double(get(hObject,'String')) returns contents of edit_grid as a double


% --- Executes during object creation, after setting all properties.
function edit_grid_CreateFcn(hObject, eventdata, handles)
% hObject    handle to edit_grid (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    empty - handles not created until after all CreateFcns called

% Hint: edit controls usually have a white background on Windows.
%       See ISPC and COMPUTER.
if ispc && isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
    set(hObject,'BackgroundColor','white');
end



function edit_wsize_Callback(hObject, eventdata, handles)
% hObject    handle to edit_wsize (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hints: get(hObject,'String') returns contents of edit_wsize as text
%        str2double(get(hObject,'String')) returns contents of edit_wsize as a double


% --- Executes during object creation, after setting all properties.
function edit_wsize_CreateFcn(hObject, eventdata, handles)
% hObject    handle to edit_wsize (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    empty - handles not created until after all CreateFcns called

% Hint: edit controls usually have a white background on Windows.
%       See ISPC and COMPUTER.
if ispc && isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
    set(hObject,'BackgroundColor','white');
end


% --- Executes on button press in pushbutton_ArrangeDice.
function pushbutton_ArrangeDice_Callback(hObject, eventdata, handles)
% hObject    handle to pushbutton_ArrangeDice (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
handles.Maxno = str2num(get(handles.edit_Maxno,'String'));
handles.gsize = str2num(get(handles.edit_grid,'String'));
handles.gsize = handles.gsize*10^-3;
handles.wsize = str2num(get(handles.edit_wsize,'String'));
handles.slwidth = str2num(get(handles.edit_slwidth,'String'));
if length(handles.slwidth)==1
    handles.slwidth = [handles.slwidth handles.slwidth];
end;
handles.Rxmax = str2num(get(handles.edit_Rxmax,'String'));
handles.Rymax = str2num(get(handles.edit_Rymax,'String'));

[~,~,Dice_data] = xlsread(handles.xlspath,1,['B2:J' num2str(handles.Maxno+1)]);
NDice_data={};
Rno = [];
for r = 1:size(Dice_data,1)    
    Dice_data{r,4} = Dice_data{r,4}/Dice_data{r,9};
    NDice_data = [NDice_data; repmat(Dice_data(r,:),Dice_data{r,9},1)];
    Rno = [Rno; r*ones(Dice_data{r,9},1)];
end;
Old_DVol = cell2mat(Dice_data(:,4));
Dice_data = NDice_data;

Did = (1:size(Dice_data,1))';
Ddim = [cell2mat(Dice_data(:,2))+handles.slwidth(1) cell2mat(Dice_data(:,3))+handles.slwidth(2)];
Ddim = ceil(Ddim/handles.gsize)*handles.gsize;

Dvol = cell2mat(Dice_data(:,4));
Dreq = cell2mat(Dice_data(:,5:9));

Gpara.Rmax = [handles.Rxmax handles.Rymax]*10^3;
Gpara.Sline = handles.slwidth;

[Fcor,Fsets,Fwafer] = DicePackingR3(Did,Ddim(:,1),Ddim(:,2),Dvol,Dreq,Gpara,handles.axes1);
Rnew = [max(Fcor(:,3))-min(Fcor(:,1)) max(Fcor(:,4))-min(Fcor(:,2))]/10^3;

[map_in,map_on,xx,yy,xoffset,yoffset] = DieOffset(Rnew(1),Rnew(2),handles.wsize,handles.axes2);
GDPW = sum(map_in(:));

% Options for Stepper/Normal Reticle
% RFL import function (Group Info + Same Cut-set Info) with decided coordinates

Rshift = [max(Fcor(:,3))-min(Fcor(:,1)) max(Fcor(:,4))-min(Fcor(:,2))]/2;
SetID = cell(length(Did),1);
XLset = SetID;
XLFsets = Fsets';
MDPW = zeros(length(Did),1);
Lcor = zeros(length(Did),2);
for l=1:length(Fsets)
    for i=1:length(Fsets{l})
        SetID{Fsets{l}(i)}=[SetID{Fsets{l}(i)} l];
        MDPW(Fsets{l}(i)) = MDPW(Fsets{l}(i))+GDPW;         % Provides # dices = GDPW x all cut-sets
        Lcor(Fsets{l}(i),:) = [Fcor(Fsets{l}(i),1)-Rshift(1)+Ddim(Fsets{l}(i),1)/2,Fcor(Fsets{l}(i),2)-Rshift(2)+Ddim(Fsets{l}(i),2)/2];
        XLset{Fsets{l}(i)} = num2str(SetID{Fsets{l}(i)});
        if Dvol(Fsets{l}(i))==0
            XLFsets{l}(i)=0;
        end;
    end;
    XLFsets{l} = num2str(XLFsets{l}(XLFsets{l}~=0));
end;
 XLset(Dvol==0)={'0'};
 MDPW(Dvol==0)=0;
% GDPW = (cell2mat(cellfun(@length,SetID,'UniformOutput', false)).*sum(map_in(:))).*(Dvol~=0);

handles.xlspathout = fullfile(handles.pname,[handles.fname '_out.xlsx']);

Myxlwrite(handles.xlspathout,{'Dice No' 'Dice ID' 'Dice Xcor' 'Dice Ycor' 'Set ID' 'Dice-Yield' 'Volume'},1,'A1:G1');
Myxlwrite(handles.xlspathout,Did,1,['A2:A' num2str(length(Did)+1)]);
Myxlwrite(handles.xlspathout,Dice_data(:,1),1,['B2:B' num2str(length(Did)+1)]);
Myxlwrite(handles.xlspathout,Lcor,1,['C2:D' num2str(length(Did)+1)]);
Myxlwrite(handles.xlspathout,XLset,1,['E2:E' num2str(length(Did)+1)]);
Myxlwrite(handles.xlspathout,MDPW,1,['F2:F' num2str(length(Did)+1)]); 
Myxlwrite(handles.xlspathout,Dvol,1,['G2:G' num2str(length(Did)+1)]);

% Wafer Count: Calculation need to refine
Myxlwrite(handles.xlspathout,{'Set No' 'Dice No ' 'Wafer/Set'},1,'I1:K1');
Myxlwrite(handles.xlspathout,[1:length(Fsets)]',1,['I2:I' num2str(length(Fsets)+1)]);
Myxlwrite(handles.xlspathout,XLFsets,1,['J2:J' num2str(length(Fsets)+1)]);
Myxlwrite(handles.xlspathout,ceil(Fwafer/GDPW),1,['K2:K' num2str(length(Fsets)+1)]);
Myxlwrite(handles.xlspathout,{'Total Wafer =',sum(ceil(Fwafer/GDPW))},1,['J' num2str(length(Fsets)+2) ':K' num2str(length(Fsets)+2)]);


% Myxlwrite(handles.xlspath,ceil(Dvol./GDPW),2,['H2:H' num2str(length(Did)+1)]);
% Myxlwrite(handles.xlspath,{'Total Wafer =', num2str(sum(ceil(Dvol(GDPW~=0)./GDPW(GDPW~=0))-1)+length(Fsets))},2,'J2:K2');

set(handles.edit_bsize,'String',num2str(Rnew));
set(handles.edit_bshift,'String',num2str([xoffset,yoffset]));
set(handles.edit_shotno,'String',num2str(sum(map_in(:))));

guidata(hObject,handles);


function edit_bsize_Callback(hObject, eventdata, handles)
% hObject    handle to edit_bsize (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hints: get(hObject,'String') returns contents of edit_bsize as text
%        str2double(get(hObject,'String')) returns contents of edit_bsize as a double


% --- Executes during object creation, after setting all properties.
function edit_bsize_CreateFcn(hObject, eventdata, handles)
% hObject    handle to edit_bsize (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    empty - handles not created until after all CreateFcns called

% Hint: edit controls usually have a white background on Windows.
%       See ISPC and COMPUTER.
if ispc && isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
    set(hObject,'BackgroundColor','white');
end



function edit_bshift_Callback(hObject, eventdata, handles)
% hObject    handle to edit_bshift (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hints: get(hObject,'String') returns contents of edit_bshift as text
%        str2double(get(hObject,'String')) returns contents of edit_bshift as a double


% --- Executes during object creation, after setting all properties.
function edit_bshift_CreateFcn(hObject, eventdata, handles)
% hObject    handle to edit_bshift (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    empty - handles not created until after all CreateFcns called

% Hint: edit controls usually have a white background on Windows.
%       See ISPC and COMPUTER.
if ispc && isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
    set(hObject,'BackgroundColor','white');
end



function edit_shotno_Callback(hObject, eventdata, handles)
% hObject    handle to edit_shotno (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hints: get(hObject,'String') returns contents of edit_shotno as text
%        str2double(get(hObject,'String')) returns contents of edit_shotno as a double


% --- Executes during object creation, after setting all properties.
function edit_shotno_CreateFcn(hObject, eventdata, handles)
% hObject    handle to edit_shotno (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    empty - handles not created until after all CreateFcns called

% Hint: edit controls usually have a white background on Windows.
%       See ISPC and COMPUTER.
if ispc && isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
    set(hObject,'BackgroundColor','white');
end


% --- Executes when figure1 is resized.
function figure1_ResizeFcn(hObject, eventdata, handles)
% hObject    handle to figure1 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)



function edit_slwidth_Callback(hObject, eventdata, handles)
% hObject    handle to edit_slwidth (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hints: get(hObject,'String') returns contents of edit_slwidth as text
%        str2double(get(hObject,'String')) returns contents of edit_slwidth as a double


% --- Executes during object creation, after setting all properties.
function edit_slwidth_CreateFcn(hObject, eventdata, handles)
% hObject    handle to edit_slwidth (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    empty - handles not created until after all CreateFcns called

% Hint: edit controls usually have a white background on Windows.
%       See ISPC and COMPUTER.
if ispc && isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
    set(hObject,'BackgroundColor','white');
end



function edit_Rymax_Callback(hObject, eventdata, handles)
% hObject    handle to edit_Rymax (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hints: get(hObject,'String') returns contents of edit_Rymax as text
%        str2double(get(hObject,'String')) returns contents of edit_Rymax as a double


% --- Executes during object creation, after setting all properties.
function edit_Rymax_CreateFcn(hObject, eventdata, handles)
% hObject    handle to edit_Rymax (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    empty - handles not created until after all CreateFcns called

% Hint: edit controls usually have a white background on Windows.
%       See ISPC and COMPUTER.
if ispc && isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
    set(hObject,'BackgroundColor','white');
end



function edit_Rxmax_Callback(hObject, eventdata, handles)
% hObject    handle to edit_Rxmax (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hints: get(hObject,'String') returns contents of edit_Rxmax as text
%        str2double(get(hObject,'String')) returns contents of edit_Rxmax as a double


% --- Executes during object creation, after setting all properties.
function edit_Rxmax_CreateFcn(hObject, eventdata, handles)
% hObject    handle to edit_Rxmax (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    empty - handles not created until after all CreateFcns called

% Hint: edit controls usually have a white background on Windows.
%       See ISPC and COMPUTER.
if ispc && isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
    set(hObject,'BackgroundColor','white');
end


% --- Creates and returns a handle to the GUI figure. 
function h1 = RFL_Interface2_export_LayoutFcn(policy)
% policy - create a new figure or use a singleton. 'new' or 'reuse'.

persistent hsingleton;
if strcmpi(policy, 'reuse') & ishandle(hsingleton)
    h1 = hsingleton;
    return;
end

appdata = [];
appdata.GUIDEOptions = struct(...
    'active_h', [], ...
    'taginfo', struct(...
    'figure', [], ...
    'axes', 3, ...
    'edit', 11, ...
    'pushbutton', 4, ...
    'text', 11), ...
    'override', 1, ...
    'release', 13, ...
    'resize', 'simple', ...
    'accessibility', 'callback', ...
    'mfile', 1, ...
    'callbacks', 1, ...
    'singleton', 1, ...
    'syscolorfig', 1, ...
    'blocking', 0, ...
    'lastSavedFile', '/home/strivedi/OLD_DATA/RFL1/Coding/RFL_Interface2_export.m', ...
    'lastFilename', '/home/strivedi/OLD_DATA/RFL1/Coding/RFL_Interface2.fig');
appdata.lastValidTag = 'figure1';
appdata.GUIDELayoutEditor = [];
appdata.initTags = struct(...
    'handle', [], ...
    'tag', 'figure1');

h1 = figure(...
'PaperUnits','centimeters',...
'Units','characters',...
'Position',[103.8 4 198.8 57.6923076923077],...
'Visible','on',...
'Color',get(0,'defaultfigureColor'),...
'ResizeFcn',@(hObject,eventdata)RFL_Interface2('figure1_ResizeFcn',hObject,eventdata,guidata(hObject)),...
'IntegerHandle','off',...
'Colormap',[0 0 0.5625;0 0 0.625;0 0 0.6875;0 0 0.75;0 0 0.8125;0 0 0.875;0 0 0.9375;0 0 1;0 0.0625 1;0 0.125 1;0 0.1875 1;0 0.25 1;0 0.3125 1;0 0.375 1;0 0.4375 1;0 0.5 1;0 0.5625 1;0 0.625 1;0 0.6875 1;0 0.75 1;0 0.8125 1;0 0.875 1;0 0.9375 1;0 1 1;0.0625 1 1;0.125 1 0.9375;0.1875 1 0.875;0.25 1 0.8125;0.3125 1 0.75;0.375 1 0.6875;0.4375 1 0.625;0.5 1 0.5625;0.5625 1 0.5;0.625 1 0.4375;0.6875 1 0.375;0.75 1 0.3125;0.8125 1 0.25;0.875 1 0.1875;0.9375 1 0.125;1 1 0.0625;1 1 0;1 0.9375 0;1 0.875 0;1 0.8125 0;1 0.75 0;1 0.6875 0;1 0.625 0;1 0.5625 0;1 0.5 0;1 0.4375 0;1 0.375 0;1 0.3125 0;1 0.25 0;1 0.1875 0;1 0.125 0;1 0.0625 0;1 0 0;0.9375 0 0;0.875 0 0;0.8125 0 0;0.75 0 0;0.6875 0 0;0.625 0 0;0.5625 0 0],...
'MenuBar','none',...
'Name','RFL_Interface2',...
'NumberTitle','off',...
'Tag','figure1',...
'UserData',[],...
'PaperPosition',get(0,'defaultfigurePaperPosition'),...
'PaperSize',[20.99999864 29.69999902],...
'PaperType','A4',...
'InvertHardcopy',get(0,'defaultfigureInvertHardcopy'),...
'ScreenPixelsPerInchMode','manual',...
'HandleVisibility','callback',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'axes1';

h2 = axes(...
'Parent',h1,...
'FontUnits',get(0,'defaultaxesFontUnits'),...
'Units',get(0,'defaultaxesUnits'),...
'CameraPosition',[0.5 0.5 9.16025403784439],...
'CameraPositionMode',get(0,'defaultaxesCameraPositionMode'),...
'CameraTarget',[0.5 0.5 0.5],...
'CameraTargetMode',get(0,'defaultaxesCameraTargetMode'),...
'CameraViewAngle',6.60861036031192,...
'CameraViewAngleMode',get(0,'defaultaxesCameraViewAngleMode'),...
'PlotBoxAspectRatio',[1 0.9198682766191 0.9198682766191],...
'PlotBoxAspectRatioMode',get(0,'defaultaxesPlotBoxAspectRatioMode'),...
'XTick',[0 0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1],...
'XTickMode',get(0,'defaultaxesXTickMode'),...
'XTickLabel',{  '0'; '0.1'; '0.2'; '0.3'; '0.4'; '0.5'; '0.6'; '0.7'; '0.8'; '0.9'; '1' },...
'XTickLabelMode',get(0,'defaultaxesXTickLabelMode'),...
'YTick',[0 0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1],...
'YTickMode',get(0,'defaultaxesYTickMode'),...
'YTickLabel',{  '0'; '0.1'; '0.2'; '0.3'; '0.4'; '0.5'; '0.6'; '0.7'; '0.8'; '0.9'; '1' },...
'YTickLabelMode',get(0,'defaultaxesYTickLabelMode'),...
'Color',get(0,'defaultaxesColor'),...
'CameraMode',get(0,'defaultaxesCameraMode'),...
'DataSpaceMode',get(0,'defaultaxesDataSpaceMode'),...
'ColorSpaceMode',get(0,'defaultaxesColorSpaceMode'),...
'DecorationContainerMode',get(0,'defaultaxesDecorationContainerMode'),...
'ChildContainerMode',get(0,'defaultaxesChildContainerMode'),...
'XRulerMode',get(0,'defaultaxesXRulerMode'),...
'XBaselineMode',get(0,'defaultaxesXBaselineMode'),...
'YRulerMode',get(0,'defaultaxesYRulerMode'),...
'YBaselineMode',get(0,'defaultaxesYBaselineMode'),...
'ZRulerMode',get(0,'defaultaxesZRulerMode'),...
'ZBaselineMode',get(0,'defaultaxesZBaselineMode'),...
'AmbientLightSourceMode',get(0,'defaultaxesAmbientLightSourceMode'),...
'Tag','axes1',...
'Position',[0.408450704225353 0.0466666666666667 0.572434607645875 0.908],...
'ActivePositionProperty','position',...
'ActivePositionPropertyMode',get(0,'defaultaxesActivePositionPropertyMode'),...
'LooseInset',[0.177085365853659 0.0999267399267399 0.129408536585366 0.0681318681318681],...
'SortMethod','childorder',...
'SortMethodMode',get(0,'defaultaxesSortMethodMode'),...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

h3 = get(h2,'title');

set(h3,...
'Parent',h2,...
'Units','data',...
'FontUnits','points',...
'DecorationContainer',[],...
'DecorationContainerMode','auto',...
'Color',[0 0 0],...
'ColorMode','auto',...
'Position',[0.500001158332197 1.00298329355609 0.5],...
'PositionMode','auto',...
'String',blanks(0),...
'Interpreter','tex',...
'Rotation',0,...
'RotationMode','auto',...
'FontName','Helvetica',...
'FontSize',10,...
'FontAngle','normal',...
'FontWeight','normal',...
'HorizontalAlignment','center',...
'HorizontalAlignmentMode','auto',...
'VerticalAlignment','bottom',...
'VerticalAlignmentMode','auto',...
'EdgeColor','none',...
'LineStyle','-',...
'LineWidth',0.5,...
'BackgroundColor','none',...
'Margin',[],...
'Clipping','off',...
'Layer','middle',...
'LayerMode','auto',...
'FontSmoothing','on',...
'FontSmoothingMode','auto',...
'DisplayName',blanks(0),...
'IncludeRenderer','on',...
'IsContainer','off',...
'IsContainerMode','auto',...
'HelpTopicKey',blanks(0),...
'ButtonDownFcn',blanks(0),...
'BusyAction','queue',...
'Interruptible','on',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} ,...
'DeleteFcn',blanks(0),...
'Tag',blanks(0),...
'HitTest','on',...
'PickableParts','visible',...
'PickablePartsMode','auto',...
'XLimInclude','on',...
'YLimInclude','on',...
'ZLimInclude','on',...
'CLimInclude','on',...
'ALimInclude','on',...
'Description','Axes Title',...
'DescriptionMode','auto',...
'Visible','on',...
'Serializable','on',...
'HandleVisibility','off',...
'TransformForPrintFcnImplicitInvoke','on',...
'TransformForPrintFcnImplicitInvokeMode','auto');

h4 = get(h2,'xlabel');

set(h4,...
'Parent',h2,...
'Units','data',...
'FontUnits','points',...
'DecorationContainer',[],...
'DecorationContainerMode','auto',...
'Color',[0 0 0],...
'ColorMode','auto',...
'Position',[0.500000476837158 -0.0270485276728276 0],...
'PositionMode','auto',...
'String',blanks(0),...
'Interpreter','tex',...
'Rotation',0,...
'RotationMode','auto',...
'FontName','Helvetica',...
'FontSize',10,...
'FontAngle','normal',...
'FontWeight','normal',...
'HorizontalAlignment','center',...
'HorizontalAlignmentMode','auto',...
'VerticalAlignment','top',...
'VerticalAlignmentMode','auto',...
'EdgeColor','none',...
'LineStyle','-',...
'LineWidth',0.5,...
'BackgroundColor','none',...
'Margin',[],...
'Clipping','off',...
'Layer','back',...
'LayerMode','auto',...
'FontSmoothing','on',...
'FontSmoothingMode','auto',...
'DisplayName',blanks(0),...
'IncludeRenderer','on',...
'IsContainer','off',...
'IsContainerMode','auto',...
'HelpTopicKey',blanks(0),...
'ButtonDownFcn',blanks(0),...
'BusyAction','queue',...
'Interruptible','on',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} ,...
'DeleteFcn',blanks(0),...
'Tag',blanks(0),...
'HitTest','on',...
'PickableParts','visible',...
'PickablePartsMode','auto',...
'XLimInclude','on',...
'YLimInclude','on',...
'ZLimInclude','on',...
'CLimInclude','on',...
'ALimInclude','on',...
'Description','AxisRulerBase Label',...
'DescriptionMode','auto',...
'Visible','on',...
'Serializable','on',...
'HandleVisibility','off',...
'TransformForPrintFcnImplicitInvoke','on',...
'TransformForPrintFcnImplicitInvokeMode','auto');

h5 = get(h2,'ylabel');

set(h5,...
'Parent',h2,...
'Units','data',...
'FontUnits','points',...
'DecorationContainer',[],...
'DecorationContainerMode','auto',...
'Color',[0 0 0],...
'ColorMode','auto',...
'Position',[-0.0332967428183146 0.500000476837158 0],...
'PositionMode','auto',...
'String',blanks(0),...
'Interpreter','tex',...
'Rotation',90,...
'RotationMode','auto',...
'FontName','Helvetica',...
'FontSize',10,...
'FontAngle','normal',...
'FontWeight','normal',...
'HorizontalAlignment','center',...
'HorizontalAlignmentMode','auto',...
'VerticalAlignment','bottom',...
'VerticalAlignmentMode','auto',...
'EdgeColor','none',...
'LineStyle','-',...
'LineWidth',0.5,...
'BackgroundColor','none',...
'Margin',[],...
'Clipping','off',...
'Layer','back',...
'LayerMode','auto',...
'FontSmoothing','on',...
'FontSmoothingMode','auto',...
'DisplayName',blanks(0),...
'IncludeRenderer','on',...
'IsContainer','off',...
'IsContainerMode','auto',...
'HelpTopicKey',blanks(0),...
'ButtonDownFcn',blanks(0),...
'BusyAction','queue',...
'Interruptible','on',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} ,...
'DeleteFcn',blanks(0),...
'Tag',blanks(0),...
'HitTest','on',...
'PickableParts','visible',...
'PickablePartsMode','auto',...
'XLimInclude','on',...
'YLimInclude','on',...
'ZLimInclude','on',...
'CLimInclude','on',...
'ALimInclude','on',...
'Description','AxisRulerBase Label',...
'DescriptionMode','auto',...
'Visible','on',...
'Serializable','on',...
'HandleVisibility','off',...
'TransformForPrintFcnImplicitInvoke','on',...
'TransformForPrintFcnImplicitInvokeMode','auto');

h6 = get(h2,'zlabel');

set(h6,...
'Parent',h2,...
'Units','data',...
'FontUnits','points',...
'DecorationContainer',[],...
'DecorationContainerMode','auto',...
'Color',[0 0 0],...
'ColorMode','auto',...
'Position',[0 0 0],...
'PositionMode','auto',...
'String',blanks(0),...
'Interpreter','tex',...
'Rotation',0,...
'RotationMode','auto',...
'FontName','Helvetica',...
'FontSize',10,...
'FontAngle','normal',...
'FontWeight','normal',...
'HorizontalAlignment','right',...
'HorizontalAlignmentMode','auto',...
'VerticalAlignment','middle',...
'VerticalAlignmentMode','auto',...
'EdgeColor','none',...
'LineStyle','-',...
'LineWidth',0.5,...
'BackgroundColor','none',...
'Margin',[],...
'Clipping','off',...
'Layer','middle',...
'LayerMode','auto',...
'FontSmoothing','on',...
'FontSmoothingMode','auto',...
'DisplayName',blanks(0),...
'IncludeRenderer','on',...
'IsContainer','off',...
'IsContainerMode','auto',...
'HelpTopicKey',blanks(0),...
'ButtonDownFcn',blanks(0),...
'BusyAction','queue',...
'Interruptible','on',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} ,...
'DeleteFcn',blanks(0),...
'Tag',blanks(0),...
'HitTest','on',...
'PickableParts','visible',...
'PickablePartsMode','auto',...
'XLimInclude','on',...
'YLimInclude','on',...
'ZLimInclude','on',...
'CLimInclude','on',...
'ALimInclude','on',...
'Description','AxisRulerBase Label',...
'DescriptionMode','auto',...
'Visible','off',...
'Serializable','on',...
'HandleVisibility','off',...
'TransformForPrintFcnImplicitInvoke','on',...
'TransformForPrintFcnImplicitInvokeMode','auto');

appdata = [];
appdata.lastValidTag = 'axes2';

h7 = axes(...
'Parent',h1,...
'FontUnits',get(0,'defaultaxesFontUnits'),...
'Units',get(0,'defaultaxesUnits'),...
'CameraPosition',[0.5 0.5 9.16025403784439],...
'CameraPositionMode',get(0,'defaultaxesCameraPositionMode'),...
'CameraTarget',[0.5 0.5 0.5],...
'CameraTargetMode',get(0,'defaultaxesCameraTargetMode'),...
'CameraViewAngle',6.60861036031192,...
'CameraViewAngleMode',get(0,'defaultaxesCameraViewAngleMode'),...
'PlotBoxAspectRatio',[1 0.7291280148423 0.7291280148423],...
'PlotBoxAspectRatioMode',get(0,'defaultaxesPlotBoxAspectRatioMode'),...
'XTick',[0 0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1],...
'XTickMode',get(0,'defaultaxesXTickMode'),...
'XTickLabel',{  '0'; '0.1'; '0.2'; '0.3'; '0.4'; '0.5'; '0.6'; '0.7'; '0.8'; '0.9'; '1' },...
'XTickLabelMode',get(0,'defaultaxesXTickLabelMode'),...
'YTick',[0 0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1],...
'YTickMode',get(0,'defaultaxesYTickMode'),...
'YTickLabel',{  '0'; '0.1'; '0.2'; '0.3'; '0.4'; '0.5'; '0.6'; '0.7'; '0.8'; '0.9'; '1' },...
'YTickLabelMode',get(0,'defaultaxesYTickLabelMode'),...
'Color',get(0,'defaultaxesColor'),...
'CameraMode',get(0,'defaultaxesCameraMode'),...
'DataSpaceMode',get(0,'defaultaxesDataSpaceMode'),...
'ColorSpaceMode',get(0,'defaultaxesColorSpaceMode'),...
'DecorationContainerMode',get(0,'defaultaxesDecorationContainerMode'),...
'ChildContainerMode',get(0,'defaultaxesChildContainerMode'),...
'XRulerMode',get(0,'defaultaxesXRulerMode'),...
'XBaselineMode',get(0,'defaultaxesXBaselineMode'),...
'YRulerMode',get(0,'defaultaxesYRulerMode'),...
'YBaselineMode',get(0,'defaultaxesYBaselineMode'),...
'ZRulerMode',get(0,'defaultaxesZRulerMode'),...
'ZBaselineMode',get(0,'defaultaxesZBaselineMode'),...
'AmbientLightSourceMode',get(0,'defaultaxesAmbientLightSourceMode'),...
'Tag','axes2',...
'Position',[0.0281690140845071 0.256 0.339034205231389 0.425333333333333],...
'ActivePositionProperty','position',...
'ActivePositionPropertyMode',get(0,'defaultaxesActivePositionPropertyMode'),...
'LooseInset',[0.23075 0.180525164113786 0.168625 0.12308533916849],...
'SortMethod','childorder',...
'SortMethodMode',get(0,'defaultaxesSortMethodMode'),...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

h8 = get(h7,'title');

set(h8,...
'Parent',h7,...
'Units','data',...
'FontUnits','points',...
'DecorationContainer',[],...
'DecorationContainerMode','auto',...
'Color',[0 0 0],...
'ColorMode','auto',...
'Position',[0.500000558226803 1.00636132315522 0.5],...
'PositionMode','auto',...
'String',blanks(0),...
'Interpreter','tex',...
'Rotation',0,...
'RotationMode','auto',...
'FontName','Helvetica',...
'FontSize',10,...
'FontAngle','normal',...
'FontWeight','normal',...
'HorizontalAlignment','center',...
'HorizontalAlignmentMode','auto',...
'VerticalAlignment','bottom',...
'VerticalAlignmentMode','auto',...
'EdgeColor','none',...
'LineStyle','-',...
'LineWidth',0.5,...
'BackgroundColor','none',...
'Margin',[],...
'Clipping','off',...
'Layer','middle',...
'LayerMode','auto',...
'FontSmoothing','on',...
'FontSmoothingMode','auto',...
'DisplayName',blanks(0),...
'IncludeRenderer','on',...
'IsContainer','off',...
'IsContainerMode','auto',...
'HelpTopicKey',blanks(0),...
'ButtonDownFcn',blanks(0),...
'BusyAction','queue',...
'Interruptible','on',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} ,...
'DeleteFcn',blanks(0),...
'Tag',blanks(0),...
'HitTest','on',...
'PickableParts','visible',...
'PickablePartsMode','auto',...
'XLimInclude','on',...
'YLimInclude','on',...
'ZLimInclude','on',...
'CLimInclude','on',...
'ALimInclude','on',...
'Description','Axes Title',...
'DescriptionMode','auto',...
'Visible','on',...
'Serializable','on',...
'HandleVisibility','off',...
'TransformForPrintFcnImplicitInvoke','on',...
'TransformForPrintFcnImplicitInvokeMode','auto');

h9 = get(h7,'xlabel');

set(h9,...
'Parent',h7,...
'Units','data',...
'FontUnits','points',...
'DecorationContainer',[],...
'DecorationContainerMode','auto',...
'Color',[0 0 0],...
'ColorMode','auto',...
'Position',[0.500000476837158 -0.0576759953939684 0],...
'PositionMode','auto',...
'String',blanks(0),...
'Interpreter','tex',...
'Rotation',0,...
'RotationMode','auto',...
'FontName','Helvetica',...
'FontSize',10,...
'FontAngle','normal',...
'FontWeight','normal',...
'HorizontalAlignment','center',...
'HorizontalAlignmentMode','auto',...
'VerticalAlignment','top',...
'VerticalAlignmentMode','auto',...
'EdgeColor','none',...
'LineStyle','-',...
'LineWidth',0.5,...
'BackgroundColor','none',...
'Margin',[],...
'Clipping','off',...
'Layer','back',...
'LayerMode','auto',...
'FontSmoothing','on',...
'FontSmoothingMode','auto',...
'DisplayName',blanks(0),...
'IncludeRenderer','on',...
'IsContainer','off',...
'IsContainerMode','auto',...
'HelpTopicKey',blanks(0),...
'ButtonDownFcn',blanks(0),...
'BusyAction','queue',...
'Interruptible','on',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} ,...
'DeleteFcn',blanks(0),...
'Tag',blanks(0),...
'HitTest','on',...
'PickableParts','visible',...
'PickablePartsMode','auto',...
'XLimInclude','on',...
'YLimInclude','on',...
'ZLimInclude','on',...
'CLimInclude','on',...
'ALimInclude','on',...
'Description','AxisRulerBase Label',...
'DescriptionMode','auto',...
'Visible','on',...
'Serializable','on',...
'HandleVisibility','off',...
'TransformForPrintFcnImplicitInvoke','on',...
'TransformForPrintFcnImplicitInvokeMode','auto');

h10 = get(h7,'ylabel');

set(h10,...
'Parent',h7,...
'Units','data',...
'FontUnits','points',...
'DecorationContainer',[],...
'DecorationContainerMode','auto',...
'Color',[0 0 0],...
'ColorMode','auto',...
'Position',[-0.0562770551159269 0.500000476837158 0],...
'PositionMode','auto',...
'String',blanks(0),...
'Interpreter','tex',...
'Rotation',90,...
'RotationMode','auto',...
'FontName','Helvetica',...
'FontSize',10,...
'FontAngle','normal',...
'FontWeight','normal',...
'HorizontalAlignment','center',...
'HorizontalAlignmentMode','auto',...
'VerticalAlignment','bottom',...
'VerticalAlignmentMode','auto',...
'EdgeColor','none',...
'LineStyle','-',...
'LineWidth',0.5,...
'BackgroundColor','none',...
'Margin',[],...
'Clipping','off',...
'Layer','back',...
'LayerMode','auto',...
'FontSmoothing','on',...
'FontSmoothingMode','auto',...
'DisplayName',blanks(0),...
'IncludeRenderer','on',...
'IsContainer','off',...
'IsContainerMode','auto',...
'HelpTopicKey',blanks(0),...
'ButtonDownFcn',blanks(0),...
'BusyAction','queue',...
'Interruptible','on',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} ,...
'DeleteFcn',blanks(0),...
'Tag',blanks(0),...
'HitTest','on',...
'PickableParts','visible',...
'PickablePartsMode','auto',...
'XLimInclude','on',...
'YLimInclude','on',...
'ZLimInclude','on',...
'CLimInclude','on',...
'ALimInclude','on',...
'Description','AxisRulerBase Label',...
'DescriptionMode','auto',...
'Visible','on',...
'Serializable','on',...
'HandleVisibility','off',...
'TransformForPrintFcnImplicitInvoke','on',...
'TransformForPrintFcnImplicitInvokeMode','auto');

h11 = get(h7,'zlabel');

set(h11,...
'Parent',h7,...
'Units','data',...
'FontUnits','points',...
'DecorationContainer',[],...
'DecorationContainerMode','auto',...
'Color',[0 0 0],...
'ColorMode','auto',...
'Position',[0 0 0],...
'PositionMode','auto',...
'String',blanks(0),...
'Interpreter','tex',...
'Rotation',0,...
'RotationMode','auto',...
'FontName','Helvetica',...
'FontSize',10,...
'FontAngle','normal',...
'FontWeight','normal',...
'HorizontalAlignment','right',...
'HorizontalAlignmentMode','auto',...
'VerticalAlignment','middle',...
'VerticalAlignmentMode','auto',...
'EdgeColor','none',...
'LineStyle','-',...
'LineWidth',0.5,...
'BackgroundColor','none',...
'Margin',[],...
'Clipping','off',...
'Layer','middle',...
'LayerMode','auto',...
'FontSmoothing','on',...
'FontSmoothingMode','auto',...
'DisplayName',blanks(0),...
'IncludeRenderer','on',...
'IsContainer','off',...
'IsContainerMode','auto',...
'HelpTopicKey',blanks(0),...
'ButtonDownFcn',blanks(0),...
'BusyAction','queue',...
'Interruptible','on',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} ,...
'DeleteFcn',blanks(0),...
'Tag',blanks(0),...
'HitTest','on',...
'PickableParts','visible',...
'PickablePartsMode','auto',...
'XLimInclude','on',...
'YLimInclude','on',...
'ZLimInclude','on',...
'CLimInclude','on',...
'ALimInclude','on',...
'Description','AxisRulerBase Label',...
'DescriptionMode','auto',...
'Visible','off',...
'Serializable','on',...
'HandleVisibility','off',...
'TransformForPrintFcnImplicitInvoke','on',...
'TransformForPrintFcnImplicitInvokeMode','auto');

appdata = [];
appdata.lastValidTag = 'edit_fname';

h12 = uicontrol(...
'Parent',h1,...
'FontUnits',get(0,'defaultuicontrolFontUnits'),...
'Units','normalized',...
'String','XLS/XLSX File Path',...
'Style','edit',...
'Position',[0.0150905432595573 0.932 0.236418511066399 0.036],...
'BackgroundColor',[1 1 1],...
'Callback',@(hObject,eventdata)RFL_Interface2_export('edit_fname_Callback',hObject,eventdata,guidata(hObject)),...
'Children',[],...
'CreateFcn', {@local_CreateFcn, @(hObject,eventdata)RFL_Interface2_export('edit_fname_CreateFcn',hObject,eventdata,guidata(hObject)), appdata} ,...
'Tag','edit_fname');

appdata = [];
appdata.lastValidTag = 'pushbutton_Fload';

h13 = uicontrol(...
'Parent',h1,...
'FontUnits',get(0,'defaultuicontrolFontUnits'),...
'Units','normalized',...
'String','Browse',...
'Position',[0.259557344064387 0.922666666666668 0.101609657947686 0.052],...
'Callback',@(hObject,eventdata)RFL_Interface2_export('pushbutton_Fload_Callback',hObject,eventdata,guidata(hObject)),...
'Children',[],...
'Tag','pushbutton_Fload',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'text_Nmax';

h14 = uicontrol(...
'Parent',h1,...
'FontUnits',get(0,'defaultuicontrolFontUnits'),...
'Units','normalized',...
'String','Total Dice :',...
'Style','text',...
'Position',[0.0643863179074451 0.873333333333333 0.0724346076458753 0.0266666666666666],...
'Children',[],...
'Tag','text_Nmax',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'edit_Maxno';

h15 = uicontrol(...
'Parent',h1,...
'FontUnits',get(0,'defaultuicontrolFontUnits'),...
'Units','normalized',...
'String',blanks(0),...
'Style','edit',...
'Position',[0.134808853118713 0.865333333333333 0.051307847082495 0.0413333333333333],...
'BackgroundColor',[1 1 1],...
'Callback',@(hObject,eventdata)RFL_Interface2_export('edit_Maxno_Callback',hObject,eventdata,guidata(hObject)),...
'Children',[],...
'CreateFcn', {@local_CreateFcn, @(hObject,eventdata)RFL_Interface2_export('edit_Maxno_CreateFcn',hObject,eventdata,guidata(hObject)), appdata} ,...
'Tag','edit_Maxno');

appdata = [];
appdata.lastValidTag = 'text_grid';

h16 = uicontrol(...
'Parent',h1,...
'FontUnits',get(0,'defaultuicontrolFontUnits'),...
'Units','normalized',...
'String','Grid Size (nm) :',...
'Style','text',...
'Position',[0.0513078470824952 0.824 0.0784708249496982 0.0226666666666666],...
'Children',[],...
'Tag','text_grid',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'edit_grid';

h17 = uicontrol(...
'Parent',h1,...
'FontUnits',get(0,'defaultuicontrolFontUnits'),...
'Units','normalized',...
'String',blanks(0),...
'Style','edit',...
'Position',[0.134808853118713 0.816 0.051307847082495 0.0413333333333333],...
'BackgroundColor',[1 1 1],...
'Callback',@(hObject,eventdata)RFL_Interface2_export('edit_grid_Callback',hObject,eventdata,guidata(hObject)),...
'Children',[],...
'CreateFcn', {@local_CreateFcn, @(hObject,eventdata)RFL_Interface2_export('edit_grid_CreateFcn',hObject,eventdata,guidata(hObject)), appdata} ,...
'Tag','edit_grid');

appdata = [];
appdata.lastValidTag = 'text_wsize';

h18 = uicontrol(...
'Parent',h1,...
'FontUnits',get(0,'defaultuicontrolFontUnits'),...
'Units','normalized',...
'String','Wafer Size (mm) :',...
'Style','text',...
'Position',[0.0321931589537226 0.773333333333333 0.100603621730382 0.0226666666666666],...
'Children',[],...
'Tag','text_wsize',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'edit_wsize';

h19 = uicontrol(...
'Parent',h1,...
'FontUnits',get(0,'defaultuicontrolFontUnits'),...
'Units','normalized',...
'String',blanks(0),...
'Style','edit',...
'Position',[0.134808853118713 0.765333333333333 0.051307847082495 0.0413333333333333],...
'BackgroundColor',[1 1 1],...
'Callback',@(hObject,eventdata)RFL_Interface2_export('edit_wsize_Callback',hObject,eventdata,guidata(hObject)),...
'Children',[],...
'CreateFcn', {@local_CreateFcn, @(hObject,eventdata)RFL_Interface2_export('edit_wsize_CreateFcn',hObject,eventdata,guidata(hObject)), appdata} ,...
'Tag','edit_wsize');

appdata = [];
appdata.lastValidTag = 'pushbutton_ArrangeDice';

h20 = uicontrol(...
'Parent',h1,...
'FontUnits',get(0,'defaultuicontrolFontUnits'),...
'Units','normalized',...
'String','Arrange Dices',...
'Position',[0.226358148893362 0.712 0.135814889336016 0.0733333333333334],...
'Callback',@(hObject,eventdata)RFL_Interface2_export('pushbutton_ArrangeDice_Callback',hObject,eventdata,guidata(hObject)),...
'Children',[],...
'Tag','pushbutton_ArrangeDice',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'text_bsize';

h21 = uicontrol(...
'Parent',h1,...
'FontUnits',get(0,'defaultuicontrolFontUnits'),...
'Units','normalized',...
'String','Blade Size (mm) :',...
'Style','text',...
'Position',[0.035211267605634 0.188 0.100603621730382 0.0226666666666667],...
'Children',[],...
'Tag','text_bsize',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'edit_bsize';

h22 = uicontrol(...
'Parent',h1,...
'FontUnits',get(0,'defaultuicontrolFontUnits'),...
'Units','normalized',...
'String',blanks(0),...
'Style','edit',...
'Position',[0.146881287726358 0.176 0.179074446680081 0.0506666666666667],...
'BackgroundColor',[1 1 1],...
'Callback',@(hObject,eventdata)RFL_Interface2_export('edit_bsize_Callback',hObject,eventdata,guidata(hObject)),...
'Children',[],...
'CreateFcn', {@local_CreateFcn, @(hObject,eventdata)RFL_Interface2_export('edit_bsize_CreateFcn',hObject,eventdata,guidata(hObject)), appdata} ,...
'Tag','edit_bsize');

appdata = [];
appdata.lastValidTag = 'text6';

h23 = uicontrol(...
'Parent',h1,...
'FontUnits',get(0,'defaultuicontrolFontUnits'),...
'Units','normalized',...
'String','Center Dice Shift (mm) :',...
'Style','text',...
'Position',[0.0130784708249497 0.121333333333333 0.122736418511066 0.0226666666666667],...
'Children',[],...
'Tag','text6',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'edit_bshift';

h24 = uicontrol(...
'Parent',h1,...
'FontUnits',get(0,'defaultuicontrolFontUnits'),...
'Units','normalized',...
'String',blanks(0),...
'Style','edit',...
'Position',[0.146881287726358 0.109333333333333 0.17907444668008 0.0506666666666667],...
'BackgroundColor',[1 1 1],...
'Callback',@(hObject,eventdata)RFL_Interface2_export('edit_bshift_Callback',hObject,eventdata,guidata(hObject)),...
'Children',[],...
'CreateFcn', {@local_CreateFcn, @(hObject,eventdata)RFL_Interface2_export('edit_bshift_CreateFcn',hObject,eventdata,guidata(hObject)), appdata} ,...
'Tag','edit_bshift');

appdata = [];
appdata.lastValidTag = 'text7';

h25 = uicontrol(...
'Parent',h1,...
'FontUnits',get(0,'defaultuicontrolFontUnits'),...
'Units','normalized',...
'String','Good Dice/Wafer :',...
'Style','text',...
'Position',[0.0422535211267606 0.0546666666666667 0.0935613682092555 0.0226666666666667],...
'Children',[],...
'Tag','text7',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'edit_shotno';

h26 = uicontrol(...
'Parent',h1,...
'FontUnits',get(0,'defaultuicontrolFontUnits'),...
'Units','normalized',...
'String',blanks(0),...
'Style','edit',...
'Position',[0.146881287726358 0.0426666666666667 0.0724346076458753 0.0506666666666667],...
'BackgroundColor',[1 1 1],...
'Callback',@(hObject,eventdata)RFL_Interface2_export('edit_shotno_Callback',hObject,eventdata,guidata(hObject)),...
'Children',[],...
'CreateFcn', {@local_CreateFcn, @(hObject,eventdata)RFL_Interface2_export('edit_shotno_CreateFcn',hObject,eventdata,guidata(hObject)), appdata} ,...
'Tag','edit_shotno');

appdata = [];
appdata.lastValidTag = 'text_SLwidth';

h27 = uicontrol(...
'Parent',h1,...
'FontUnits',get(0,'defaultuicontrolFontUnits'),...
'Units','normalized',...
'String','ScribeLine Width (um) :',...
'Style','text',...
'Position',[0.0080482897384306 0.722666666666667 0.12374245472837 0.0226666666666666],...
'Children',[],...
'Tag','text_SLwidth',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'edit_slwidth';

h28 = uicontrol(...
'Parent',h1,...
'FontUnits',get(0,'defaultuicontrolFontUnits'),...
'Units','normalized',...
'String',blanks(0),...
'Style','edit',...
'Position',[0.134808853118713 0.714666666666667 0.051307847082495 0.0413333333333333],...
'BackgroundColor',[1 1 1],...
'Callback',@(hObject,eventdata)RFL_Interface2_export('edit_slwidth_Callback',hObject,eventdata,guidata(hObject)),...
'Children',[],...
'CreateFcn', {@local_CreateFcn, @(hObject,eventdata)RFL_Interface2_export('edit_slwidth_CreateFcn',hObject,eventdata,guidata(hObject)), appdata} ,...
'Tag','edit_slwidth');

appdata = [];
appdata.lastValidTag = 'text10';

h29 = uicontrol(...
'Parent',h1,...
'FontUnits',get(0,'defaultuicontrolFontUnits'),...
'Units','normalized',...
'String','Blade Y-Max(mm) :',...
'Style','text',...
'Position',[0.198189134808853 0.812 0.0985915492957747 0.0266666666666666],...
'Children',[],...
'Tag','text10',...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'edit_Rymax';

h30 = uicontrol(...
'Parent',h1,...
'FontUnits',get(0,'defaultuicontrolFontUnits'),...
'Units','normalized',...
'String',blanks(0),...
'Style','edit',...
'Position',[0.300804828973843 0.806666666666667 0.051307847082495 0.0413333333333333],...
'BackgroundColor',[1 1 1],...
'Callback',@(hObject,eventdata)RFL_Interface2_export('edit_Rymax_Callback',hObject,eventdata,guidata(hObject)),...
'Children',[],...
'CreateFcn', {@local_CreateFcn, @(hObject,eventdata)RFL_Interface2_export('edit_Rymax_CreateFcn',hObject,eventdata,guidata(hObject)), appdata} ,...
'Tag','edit_Rymax');

appdata = [];
appdata.lastValidTag = 'text9';

h31 = uicontrol(...
'Parent',h1,...
'FontUnits',get(0,'defaultuicontrolFontUnits'),...
'Units','normalized',...
'String','Blade X-Max(mm) :',...
'Style','text',...
'Position',[0.198189134808853 0.869333333333333 0.0985915492957747 0.0266666666666666],...
'Children',[],...
'Tag','text9',...
'UserData',[],...
'CreateFcn', {@local_CreateFcn, blanks(0), appdata} );

appdata = [];
appdata.lastValidTag = 'edit_Rxmax';

h32 = uicontrol(...
'Parent',h1,...
'FontUnits',get(0,'defaultuicontrolFontUnits'),...
'Units','normalized',...
'Style','edit',...
'Position',[0.300804828973843 0.864 0.051307847082495 0.0413333333333333],...
'BackgroundColor',[1 1 1],...
'Callback',@(hObject,eventdata)RFL_Interface2_export('edit_Rxmax_Callback',hObject,eventdata,guidata(hObject)),...
'Children',[],...
'CreateFcn', {@local_CreateFcn, @(hObject,eventdata)RFL_Interface2_export('edit_Rxmax_CreateFcn',hObject,eventdata,guidata(hObject)), appdata} ,...
'Tag','edit_Rxmax',...
'UserData',[]);


hsingleton = h1;


% --- Set application data first then calling the CreateFcn. 
function local_CreateFcn(hObject, eventdata, createfcn, appdata)

if ~isempty(appdata)
   names = fieldnames(appdata);
   for i=1:length(names)
       name = char(names(i));
       setappdata(hObject, name, getfield(appdata,name));
   end
end

if ~isempty(createfcn)
   if isa(createfcn,'function_handle')
       createfcn(hObject, eventdata);
   else
       eval(createfcn);
   end
end


% --- Handles default GUIDE GUI creation and callback dispatch
function varargout = gui_mainfcn(gui_State, varargin)

gui_StateFields =  {'gui_Name'
    'gui_Singleton'
    'gui_OpeningFcn'
    'gui_OutputFcn'
    'gui_LayoutFcn'
    'gui_Callback'};
gui_Mfile = '';
for i=1:length(gui_StateFields)
    if ~isfield(gui_State, gui_StateFields{i})
        error(message('MATLAB:guide:StateFieldNotFound', gui_StateFields{ i }, gui_Mfile));
    elseif isequal(gui_StateFields{i}, 'gui_Name')
        gui_Mfile = [gui_State.(gui_StateFields{i}), '.m'];
    end
end

numargin = length(varargin);

if numargin == 0
    % RFL_INTERFACE2_EXPORT
    % create the GUI only if we are not in the process of loading it
    % already
    gui_Create = true;
elseif local_isInvokeActiveXCallback(gui_State, varargin{:})
    % RFL_INTERFACE2_EXPORT(ACTIVEX,...)
    vin{1} = gui_State.gui_Name;
    vin{2} = [get(varargin{1}.Peer, 'Tag'), '_', varargin{end}];
    vin{3} = varargin{1};
    vin{4} = varargin{end-1};
    vin{5} = guidata(varargin{1}.Peer);
    feval(vin{:});
    return;
elseif local_isInvokeHGCallback(gui_State, varargin{:})
    % RFL_INTERFACE2_EXPORT('CALLBACK',hObject,eventData,handles,...)
    gui_Create = false;
else
    % RFL_INTERFACE2_EXPORT(...)
    % create the GUI and hand varargin to the openingfcn
    gui_Create = true;
end

if ~gui_Create
    % In design time, we need to mark all components possibly created in
    % the coming callback evaluation as non-serializable. This way, they
    % will not be brought into GUIDE and not be saved in the figure file
    % when running/saving the GUI from GUIDE.
    designEval = false;
    if (numargin>1 && ishghandle(varargin{2}))
        fig = varargin{2};
        while ~isempty(fig) && ~ishghandle(fig,'figure')
            fig = get(fig,'parent');
        end
        
        designEval = isappdata(0,'CreatingGUIDEFigure') || (isscalar(fig)&&isprop(fig,'GUIDEFigure'));
    end
        
    if designEval
        beforeChildren = findall(fig);
    end
    
    % evaluate the callback now
    varargin{1} = gui_State.gui_Callback;
    if nargout
        [varargout{1:nargout}] = feval(varargin{:});
    else       
        feval(varargin{:});
    end
    
    % Set serializable of objects created in the above callback to off in
    % design time. Need to check whether figure handle is still valid in
    % case the figure is deleted during the callback dispatching.
    if designEval && ishghandle(fig)
        set(setdiff(findall(fig),beforeChildren), 'Serializable','off');
    end
else
    if gui_State.gui_Singleton
        gui_SingletonOpt = 'reuse';
    else
        gui_SingletonOpt = 'new';
    end

    % Check user passing 'visible' P/V pair first so that its value can be
    % used by oepnfig to prevent flickering
    gui_Visible = 'auto';
    gui_VisibleInput = '';
    for index=1:2:length(varargin)
        if length(varargin) == index || ~ischar(varargin{index})
            break;
        end

        % Recognize 'visible' P/V pair
        len1 = min(length('visible'),length(varargin{index}));
        len2 = min(length('off'),length(varargin{index+1}));
        if ischar(varargin{index+1}) && strncmpi(varargin{index},'visible',len1) && len2 > 1
            if strncmpi(varargin{index+1},'off',len2)
                gui_Visible = 'invisible';
                gui_VisibleInput = 'off';
            elseif strncmpi(varargin{index+1},'on',len2)
                gui_Visible = 'visible';
                gui_VisibleInput = 'on';
            end
        end
    end
    
    % Open fig file with stored settings.  Note: This executes all component
    % specific CreateFunctions with an empty HANDLES structure.

    
    % Do feval on layout code in m-file if it exists
    gui_Exported = ~isempty(gui_State.gui_LayoutFcn);
    % this application data is used to indicate the running mode of a GUIDE
    % GUI to distinguish it from the design mode of the GUI in GUIDE. it is
    % only used by actxproxy at this time.   
    setappdata(0,genvarname(['OpenGuiWhenRunning_', gui_State.gui_Name]),1);
    if gui_Exported
        gui_hFigure = feval(gui_State.gui_LayoutFcn, gui_SingletonOpt);

        % make figure invisible here so that the visibility of figure is
        % consistent in OpeningFcn in the exported GUI case
        if isempty(gui_VisibleInput)
            gui_VisibleInput = get(gui_hFigure,'Visible');
        end
        set(gui_hFigure,'Visible','off')

        % openfig (called by local_openfig below) does this for guis without
        % the LayoutFcn. Be sure to do it here so guis show up on screen.
        movegui(gui_hFigure,'onscreen');
    else
        gui_hFigure = local_openfig(gui_State.gui_Name, gui_SingletonOpt, gui_Visible);
        % If the figure has InGUIInitialization it was not completely created
        % on the last pass.  Delete this handle and try again.
        if isappdata(gui_hFigure, 'InGUIInitialization')
            delete(gui_hFigure);
            gui_hFigure = local_openfig(gui_State.gui_Name, gui_SingletonOpt, gui_Visible);
        end
    end
    if isappdata(0, genvarname(['OpenGuiWhenRunning_', gui_State.gui_Name]))
        rmappdata(0,genvarname(['OpenGuiWhenRunning_', gui_State.gui_Name]));
    end

    % Set flag to indicate starting GUI initialization
    setappdata(gui_hFigure,'InGUIInitialization',1);

    % Fetch GUIDE Application options
    gui_Options = getappdata(gui_hFigure,'GUIDEOptions');
    % Singleton setting in the GUI MATLAB code file takes priority if different
    gui_Options.singleton = gui_State.gui_Singleton;

    if ~isappdata(gui_hFigure,'GUIOnScreen')
        % Adjust background color
        if gui_Options.syscolorfig
            set(gui_hFigure,'Color', get(0,'DefaultUicontrolBackgroundColor'));
        end

        % Generate HANDLES structure and store with GUIDATA. If there is
        % user set GUI data already, keep that also.
        data = guidata(gui_hFigure);
        handles = guihandles(gui_hFigure);
        if ~isempty(handles)
            if isempty(data)
                data = handles;
            else
                names = fieldnames(handles);
                for k=1:length(names)
                    data.(char(names(k)))=handles.(char(names(k)));
                end
            end
        end
        guidata(gui_hFigure, data);
    end

    % Apply input P/V pairs other than 'visible'
    for index=1:2:length(varargin)
        if length(varargin) == index || ~ischar(varargin{index})
            break;
        end

        len1 = min(length('visible'),length(varargin{index}));
        if ~strncmpi(varargin{index},'visible',len1)
            try set(gui_hFigure, varargin{index}, varargin{index+1}), catch break, end
        end
    end

    % If handle visibility is set to 'callback', turn it on until finished
    % with OpeningFcn
    gui_HandleVisibility = get(gui_hFigure,'HandleVisibility');
    if strcmp(gui_HandleVisibility, 'callback')
        set(gui_hFigure,'HandleVisibility', 'on');
    end

    feval(gui_State.gui_OpeningFcn, gui_hFigure, [], guidata(gui_hFigure), varargin{:});

    if isscalar(gui_hFigure) && ishghandle(gui_hFigure)
        % Handle the default callbacks of predefined toolbar tools in this
        % GUI, if any
        guidemfile('restoreToolbarToolPredefinedCallback',gui_hFigure); 
        
        % Update handle visibility
        set(gui_hFigure,'HandleVisibility', gui_HandleVisibility);

        % Call openfig again to pick up the saved visibility or apply the
        % one passed in from the P/V pairs
        if ~gui_Exported
            gui_hFigure = local_openfig(gui_State.gui_Name, 'reuse',gui_Visible);
        elseif ~isempty(gui_VisibleInput)
            set(gui_hFigure,'Visible',gui_VisibleInput);
        end
        if strcmpi(get(gui_hFigure, 'Visible'), 'on')
            figure(gui_hFigure);
            
            if gui_Options.singleton
                setappdata(gui_hFigure,'GUIOnScreen', 1);
            end
        end

        % Done with GUI initialization
        if isappdata(gui_hFigure,'InGUIInitialization')
            rmappdata(gui_hFigure,'InGUIInitialization');
        end

        % If handle visibility is set to 'callback', turn it on until
        % finished with OutputFcn
        gui_HandleVisibility = get(gui_hFigure,'HandleVisibility');
        if strcmp(gui_HandleVisibility, 'callback')
            set(gui_hFigure,'HandleVisibility', 'on');
        end
        gui_Handles = guidata(gui_hFigure);
    else
        gui_Handles = [];
    end

    if nargout
        [varargout{1:nargout}] = feval(gui_State.gui_OutputFcn, gui_hFigure, [], gui_Handles);
    else
        feval(gui_State.gui_OutputFcn, gui_hFigure, [], gui_Handles);
    end

    if isscalar(gui_hFigure) && ishghandle(gui_hFigure)
        set(gui_hFigure,'HandleVisibility', gui_HandleVisibility);
    end
end

function gui_hFigure = local_openfig(name, singleton, visible)

% openfig with three arguments was new from R13. Try to call that first, if
% failed, try the old openfig.
if nargin('openfig') == 2
    % OPENFIG did not accept 3rd input argument until R13,
    % toggle default figure visible to prevent the figure
    % from showing up too soon.
    gui_OldDefaultVisible = get(0,'defaultFigureVisible');
    set(0,'defaultFigureVisible','off');
    gui_hFigure = matlab.hg.internal.openfigLegacy(name, singleton);
    set(0,'defaultFigureVisible',gui_OldDefaultVisible);
else
    % Call version of openfig that accepts 'auto' option"
    gui_hFigure = matlab.hg.internal.openfigLegacy(name, singleton, visible);  
%     %workaround for CreateFcn not called to create ActiveX
%         peers=findobj(findall(allchild(gui_hFigure)),'type','uicontrol','style','text');    
%         for i=1:length(peers)
%             if isappdata(peers(i),'Control')
%                 actxproxy(peers(i));
%             end            
%         end
end

function result = local_isInvokeActiveXCallback(gui_State, varargin)

try
    result = ispc && iscom(varargin{1}) ...
             && isequal(varargin{1},gcbo);
catch
    result = false;
end

function result = local_isInvokeHGCallback(gui_State, varargin)

try
    fhandle = functions(gui_State.gui_Callback);
    result = ~isempty(findstr(gui_State.gui_Name,fhandle.file)) || ...
             (ischar(varargin{1}) ...
             && isequal(ishghandle(varargin{2}), 1) ...
             && (~isempty(strfind(varargin{1},[get(varargin{2}, 'Tag'), '_'])) || ...
                ~isempty(strfind(varargin{1}, '_CreateFcn'))) );
catch
    result = false;
end
